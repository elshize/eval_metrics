if(EXISTS "${CMAKE_BINARY_DIR}/conanbuildinfo.cmake")
    include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
    conan_basic_setup(TARGETS)
endif()

macro(fix_conan_target CONAN_NAME EXPECTED_NAME)
    add_library(${EXPECTED_NAME} INTERFACE IMPORTED)
    get_target_property(V_INTERFACE_LINK_LIBRARIES "CONAN_PKG::${CONAN_NAME}" INTERFACE_LINK_LIBRARIES)
    set_property(TARGET ${EXPECTED_NAME} PROPERTY INTERFACE_LINK_LIBRARIES ${V_INTERFACE_LINK_LIBRARIES})
    get_target_property(V_INTERFACE_INCLUDE_DIRECTORIES "CONAN_PKG::${CONAN_NAME}" INTERFACE_INCLUDE_DIRECTORIES)
    set_property(TARGET ${EXPECTED_NAME} PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${V_INTERFACE_INCLUDE_DIRECTORIES})
    get_target_property(V_INTERFACE_COMPILE_DEFINITIONS "CONAN_PKG::${CONAN_NAME}" INTERFACE_COMPILE_DEFINITIONS)
    set_property(TARGET ${EXPECTED_NAME} PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${V_INTERFACE_INCLUDE_DIRECTORIES})
    get_target_property(V_INTERFACE_COMPILE_OPTIONS "CONAN_PKG::${CONAN_NAME}" INTERFACE_COMPILE_OPTIONS)
    set_property(TARGET ${EXPECTED_NAME} PROPERTY INTERFACE_INCLUDE_OPTIONS ${V_INTERFACE_INCLUDE_OPTIONS})
endmacro()

macro(find_package _name)
    if(EXISTS "${CMAKE_BINARY_DIR}/conanbuildinfo.cmake")
        if("${_name}" STREQUAL "GTest")
            fix_conan_target(gtest GTest::GTest)
        elseif("${_name}" STREQUAL "CLI11")
            fix_conan_target(CLI11 CLI11::CLI11)
        endif()
    else()
        _find_package(${ARGV})
    endif()
endmacro()
